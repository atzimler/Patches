diff -ruN nantcontrib-0.92.orig/src/Tasks/Msi/InstallerDatabase.cs nantcontrib-0.92/src/Tasks/Msi/InstallerDatabase.cs
--- nantcontrib-0.92.orig/src/Tasks/Msi/InstallerDatabase.cs	2018-03-29 06:10:45.000000000 +1100
+++ nantcontrib-0.92/src/Tasks/Msi/InstallerDatabase.cs	2018-03-29 06:11:54.000000000 +1100
@@ -148,7 +148,7 @@
         }
 
         public SummaryInfo GetSummaryInformation() {
-            return _database.get_SummaryInformation(200);
+            return _database.SummaryInformation;
         }
 
 
diff -ruN nantcontrib-0.92.orig/src/Tasks/SourceSafe/BaseTask.cs nantcontrib-0.92/src/Tasks/SourceSafe/BaseTask.cs
--- nantcontrib-0.92.orig/src/Tasks/SourceSafe/BaseTask.cs	2018-03-29 06:10:45.000000000 +1100
+++ nantcontrib-0.92/src/Tasks/SourceSafe/BaseTask.cs	2018-03-29 06:12:22.000000000 +1100
@@ -160,7 +160,7 @@
                 // and version
                 _item = _database.get_VSSItem(Path, false);
                 if (Version != null) {
-                    _item = _item.get_Version(Version);
+                    _item = _item.Version;
                 }
             } catch (Exception ex) {
                 throw new BuildException("The \"path\" and/or \"version\" is not valid.", 
diff -ruN nantcontrib-0.92.orig/src/Tasks/SourceSafe/DiffTask.cs nantcontrib-0.92/src/Tasks/SourceSafe/DiffTask.cs
--- nantcontrib-0.92.orig/src/Tasks/SourceSafe/DiffTask.cs	2018-03-29 06:10:45.000000000 +1100
+++ nantcontrib-0.92/src/Tasks/SourceSafe/DiffTask.cs	2018-03-29 06:13:15.000000000 +1100
@@ -108,7 +108,7 @@
                 Log(Level.Info, LogPrefix + "Processing item " + ssItem.Name );
             }
             bool addVersion = true;
-            foreach (IVSSVersion version in ssItem.get_Versions(0)) {
+            foreach (IVSSVersion version in ssItem.Versions) {
                 // VSS returns the versions in descending order, meaning the
                 // most recent versions appear first.
                 string action = version.Action;
@@ -169,7 +169,7 @@
                 Log(Level.Info, LogPrefix + "Processing project " + Project);
             }
             IVSSItem ssProj = this.Database.get_VSSItem(Project,false);
-            IVSSItems ssSubItems = ssProj.get_Items(false);
+            IVSSItems ssSubItems = ssProj.Items;
             foreach (IVSSItem subItem in ssSubItems) {
                 if (subItem.Type == 0) {
                     //Type=0 is a Project
diff -ruN nantcontrib-0.92.orig/src/Tasks/SourceSafe/GetTask.cs nantcontrib-0.92/src/Tasks/SourceSafe/GetTask.cs
--- nantcontrib-0.92.orig/src/Tasks/SourceSafe/GetTask.cs	2018-03-29 06:10:45.000000000 +1100
+++ nantcontrib-0.92/src/Tasks/SourceSafe/GetTask.cs	2018-03-29 06:13:47.000000000 +1100
@@ -244,7 +244,7 @@
         /// <param name="item">The VSS Item (project) to check for deletions</param>
         /// <param name="localPathPrefix">The path to the folder of the item being processed</param>
         public void RemoveDeletedFromLocalImage(IVSSItem item, string localPathPrefix) {
-            IVSSItems items = item.get_Items(true);
+            IVSSItems items = item.Items;
 
             Hashtable deletedTable = BuildDeletedTable(items);
         
diff -ruN nantcontrib-0.92.orig/src/Tasks/SourceSafe/History.cs nantcontrib-0.92/src/Tasks/SourceSafe/History.cs
--- nantcontrib-0.92.orig/src/Tasks/SourceSafe/History.cs	2018-03-29 06:10:45.000000000 +1100
+++ nantcontrib-0.92/src/Tasks/SourceSafe/History.cs	2018-03-29 06:14:33.000000000 +1100
@@ -275,7 +275,7 @@
             string user = User != null ? User.ToLower(CultureInfo.InvariantCulture)
                 : null;
 
-            foreach (IVSSVersion version in ssItem.get_Versions(VersionFlags)) {
+            foreach (IVSSVersion version in ssItem.Versions) {
                 // VSS returns the versions in descending order, meaning the
                 // most recent versions appear first.
                 if (ToDate == DateTime.MinValue || version.Date <= ToDate) {
@@ -303,7 +303,7 @@
             string user = User != null ? User.ToLower(CultureInfo.InvariantCulture)
                 : null;
 
-            foreach (IVSSVersion version in ssItem.get_Versions(VersionFlags)) {
+            foreach (IVSSVersion version in ssItem.Versions) {
                 // VSS returns the versions in descending order, meaning the
                 // most recent versions appear first.
                 if (ToLabel == null || version.Action.StartsWith(string.Format("Labeled '{0}'", ToLabel))){
